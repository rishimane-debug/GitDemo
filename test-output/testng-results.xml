<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="3" total="20" passed="16" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-07-17T20:01:59 IST" name="Load deapartment" finished-at="2025-07-17T20:01:59 IST" duration-ms="319">
    <groups>
      <group name="Smoke">
        <method signature="day2.ploan(java.lang.String,java.lang.String)[pri:0, instance:test.day2@1a6d8329]" name="ploan" class="test.day2"/>
        <method signature="day3.mobileLoginCarLoan()[pri:0, instance:test.day3@7ce69770]" name="mobileLoginCarLoan" class="test.day3"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2025-07-17T20:01:59 IST" name="Personal loan" finished-at="2025-07-17T20:01:59 IST" duration-ms="100">
      <class name="test.day4">
        <test-method signature="LoginApiCarLoan()[pri:0, instance:test.day4@1a942c18]" started-at="2025-07-17T20:01:59 IST" name="LoginApiCarLoan" finished-at="2025-07-17T20:01:59 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginApiCarLoan -->
      </class> <!-- test.day4 -->
      <class name="test.day2">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:test.day2@1a6d8329]" started-at="2025-07-17T20:01:59 IST" name="beforeTest" finished-at="2025-07-17T20:01:59 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="ploan(java.lang.String,java.lang.String)[pri:0, instance:test.day2@1a6d8329]" started-at="2025-07-17T20:01:59 IST" name="ploan" finished-at="2025-07-17T20:01:59 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[RahulShettyAcdamy.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[rushikesh]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ploan -->
        <test-method signature="ploan(java.lang.String,java.lang.String)[pri:0, instance:test.day2@1a6d8329]" started-at="2025-07-17T20:01:59 IST" name="ploan" finished-at="2025-07-17T20:01:59 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[RahulShettyAcdamy.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[rushikesh]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ploan -->
        <test-method signature="ploan(java.lang.String,java.lang.String)[pri:0, instance:test.day2@1a6d8329]" started-at="2025-07-17T20:01:59 IST" name="ploan" finished-at="2025-07-17T20:01:59 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[RahulShettyAcdamy.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[rushikesh]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ploan -->
        <test-method signature="ploan(java.lang.String,java.lang.String)[pri:0, instance:test.day2@1a6d8329]" started-at="2025-07-17T20:01:59 IST" name="ploan" finished-at="2025-07-17T20:01:59 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[RahulShettyAcdamy.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[rushikesh]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ploan -->
        <test-method signature="ploan(java.lang.String,java.lang.String)[pri:0, instance:test.day2@1a6d8329]" started-at="2025-07-17T20:01:59 IST" name="ploan" finished-at="2025-07-17T20:01:59 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[RahulShettyAcdamy.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[rushikesh]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ploan -->
      </class> <!-- test.day2 -->
      <class name="test.day1">
        <test-method signature="demo()[pri:0, instance:test.day1@6c1a5b54]" started-at="2025-07-17T20:01:59 IST" name="demo" finished-at="2025-07-17T20:01:59 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo -->
        <test-method signature="demo2()[pri:0, instance:test.day1@6c1a5b54]" started-at="2025-07-17T20:01:59 IST" name="demo2" finished-at="2025-07-17T20:01:59 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo2 -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:test.day1@6c1a5b54]" started-at="2025-07-17T20:01:59 IST" name="afterTest" finished-at="2025-07-17T20:01:59 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- test.day1 -->
    </test> <!-- Personal loan -->
    <test started-at="2025-07-17T20:01:59 IST" name="car loan" finished-at="2025-07-17T20:01:59 IST" duration-ms="71">
      <class name="test.day4">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:test.day4@1a942c18]" started-at="2025-07-17T20:01:59 IST" name="beforeSuite" finished-at="2025-07-17T20:01:59 IST" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
      </class> <!-- test.day4 -->
      <class name="test.day3">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:test.day3@7ce69770]" started-at="2025-07-17T20:01:59 IST" name="beforeClass" finished-at="2025-07-17T20:01:59 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.day3@7ce69770]" started-at="2025-07-17T20:01:59 IST" name="beforeMethod" finished-at="2025-07-17T20:01:59 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="mobileBasedCarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.day3@7ce69770]" started-at="2025-07-17T20:01:59 IST" name="mobileBasedCarLoan" data-provider="loginData" finished-at="2025-07-17T20:01:59 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firstpass]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileBasedCarLoan -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:test.day3@7ce69770]" started-at="2025-07-17T20:01:59 IST" name="afterMethod" finished-at="2025-07-17T20:01:59 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="mobileBasedCarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.day3@7ce69770]" started-at="2025-07-17T20:01:59 IST" name="mobileBasedCarLoan" data-provider="loginData" finished-at="2025-07-17T20:01:59 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[secondusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secondpass]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileBasedCarLoan -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.day3@7ce69770]" started-at="2025-07-17T20:01:59 IST" name="beforeMethod" finished-at="2025-07-17T20:01:59 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:test.day3@7ce69770]" started-at="2025-07-17T20:01:59 IST" name="afterMethod" finished-at="2025-07-17T20:01:59 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="mobileBasedCarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.day3@7ce69770]" started-at="2025-07-17T20:01:59 IST" name="mobileBasedCarLoan" data-provider="loginData" finished-at="2025-07-17T20:01:59 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[thirdpass]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileBasedCarLoan -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.day3@7ce69770]" started-at="2025-07-17T20:01:59 IST" name="beforeMethod" finished-at="2025-07-17T20:01:59 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:test.day3@7ce69770]" started-at="2025-07-17T20:01:59 IST" name="afterMethod" finished-at="2025-07-17T20:01:59 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="mobileLoginCarLoan()[pri:0, instance:test.day3@7ce69770]" started-at="2025-07-17T20:01:59 IST" name="mobileLoginCarLoan" finished-at="2025-07-17T20:01:59 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileLoginCarLoan -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.day3@7ce69770]" started-at="2025-07-17T20:01:59 IST" name="beforeMethod" finished-at="2025-07-17T20:01:59 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:test.day3@7ce69770]" started-at="2025-07-17T20:01:59 IST" name="afterMethod" finished-at="2025-07-17T20:01:59 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="mobilesinINLoan()[pri:0, instance:test.day3@7ce69770]" started-at="2025-07-17T20:01:59 IST" name="mobilesinINLoan" finished-at="2025-07-17T20:01:59 IST" duration-ms="14" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at test.day3.mobilesinINLoan(day3.java:54)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobilesinINLoan -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.day3@7ce69770]" started-at="2025-07-17T20:01:59 IST" name="beforeMethod" finished-at="2025-07-17T20:01:59 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:test.day3@7ce69770]" started-at="2025-07-17T20:01:59 IST" name="afterMethod" finished-at="2025-07-17T20:01:59 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="mobileusingLoan(java.lang.String,java.lang.String)[pri:0, instance:test.day3@7ce69770]" started-at="2025-07-17T20:01:59 IST" name="mobileusingLoan" data-provider="loginData1" finished-at="2025-07-17T20:01:59 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[user1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileusingLoan -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.day3@7ce69770]" started-at="2025-07-17T20:01:59 IST" name="beforeMethod" finished-at="2025-07-17T20:01:59 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:test.day3@7ce69770]" started-at="2025-07-17T20:01:59 IST" name="afterMethod" finished-at="2025-07-17T20:01:59 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="mobileusingLoan(java.lang.String,java.lang.String)[pri:0, instance:test.day3@7ce69770]" started-at="2025-07-17T20:01:59 IST" name="mobileusingLoan" data-provider="loginData1" finished-at="2025-07-17T20:01:59 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[user2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileusingLoan -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.day3@7ce69770]" started-at="2025-07-17T20:01:59 IST" name="beforeMethod" finished-at="2025-07-17T20:01:59 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:test.day3@7ce69770]" started-at="2025-07-17T20:01:59 IST" name="afterMethod" finished-at="2025-07-17T20:01:59 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.day3@7ce69770]" started-at="2025-07-17T20:01:59 IST" name="beforeMethod" finished-at="2025-07-17T20:01:59 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="mobileusingLoan(java.lang.String,java.lang.String)[pri:0, instance:test.day3@7ce69770]" started-at="2025-07-17T20:01:59 IST" name="mobileusingLoan" data-provider="loginData1" finished-at="2025-07-17T20:01:59 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[user3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileusingLoan -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:test.day3@7ce69770]" started-at="2025-07-17T20:01:59 IST" name="afterMethod" finished-at="2025-07-17T20:01:59 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.day3@7ce69770]" started-at="2025-07-17T20:01:59 IST" name="beforeMethod" finished-at="2025-07-17T20:01:59 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="webLoginCarLoan(java.lang.String)[pri:0, instance:test.day3@7ce69770]" started-at="2025-07-17T20:01:59 IST" name="webLoginCarLoan" finished-at="2025-07-17T20:01:59 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[qaClickAcademy.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webLoginCarLoan -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:test.day3@7ce69770]" started-at="2025-07-17T20:01:59 IST" name="afterMethod" finished-at="2025-07-17T20:01:59 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:test.day3@7ce69770]" started-at="2025-07-17T20:01:59 IST" name="afterClass" finished-at="2025-07-17T20:01:59 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- test.day3 -->
      <class name="test.day1">
        <test-method is-config="true" signature="afterSuites()[pri:0, instance:test.day1@6c1a5b54]" started-at="2025-07-17T20:01:59 IST" name="afterSuites" finished-at="2025-07-17T20:01:59 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuites -->
      </class> <!-- test.day1 -->
    </test> <!-- car loan -->
  </suite> <!-- Load deapartment -->
</testng-results>
